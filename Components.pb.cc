// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Components.proto

#include "Components.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Components_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Components_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SWTPoint_buf;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Components_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Component;
}  // namespace protobuf_Components_2eproto
class SWTPoint_bufDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SWTPoint_buf>
      _instance;
} _SWTPoint_buf_default_instance_;
class ComponentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Component>
      _instance;
} _Component_default_instance_;
class ComponentsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components>
      _instance;
} _Components_default_instance_;
namespace protobuf_Components_2eproto {
static void InitDefaultsSWTPoint_buf() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SWTPoint_buf_default_instance_;
    new (ptr) ::SWTPoint_buf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SWTPoint_buf::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SWTPoint_buf =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSWTPoint_buf}, {}};

static void InitDefaultsComponent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Component_default_instance_;
    new (ptr) ::Component();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Component::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Component =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsComponent}, {
      &protobuf_Components_2eproto::scc_info_SWTPoint_buf.base,}};

static void InitDefaultsComponents() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Components_default_instance_;
    new (ptr) ::Components();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Components::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Components =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsComponents}, {
      &protobuf_Components_2eproto::scc_info_Component.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SWTPoint_buf.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Component.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Components.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SWTPoint_buf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SWTPoint_buf, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SWTPoint_buf, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SWTPoint_buf, swt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, maxx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, minx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, maxy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, miny_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, mean_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, sd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, wv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, ar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, or__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, characteristic_scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, orientation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, center_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Component, center_y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Components, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Components, components_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::SWTPoint_buf)},
  { 8, -1, sizeof(::Component)},
  { 29, -1, sizeof(::Components)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SWTPoint_buf_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Component_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Components_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Components.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020Components.proto\"1\n\014SWTPoint_buf\022\t\n\001x\030"
      "\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\013\n\003SWT\030\003 \001(\002\"\226\002\n\tCompon"
      "ent\022\035\n\006points\030\001 \003(\0132\r.SWTPoint_buf\022\014\n\004ma"
      "xX\030\002 \001(\005\022\014\n\004minX\030\003 \001(\005\022\014\n\004maxY\030\004 \001(\005\022\014\n\004"
      "minY\030\005 \001(\005\022\r\n\005width\030\006 \001(\002\022\016\n\006height\030\007 \001("
      "\002\022\014\n\004mean\030\010 \001(\002\022\n\n\002SD\030\t \001(\002\022\n\n\002WV\030\n \001(\002\022"
      "\n\n\002AR\030\013 \001(\002\022\n\n\002OR\030\014 \001(\002\022\034\n\024characteristi"
      "c_scale\030\r \001(\002\022\023\n\013orientation\030\016 \001(\002\022\020\n\010ce"
      "nter_x\030\017 \001(\002\022\020\n\010center_y\030\020 \001(\002\",\n\nCompon"
      "ents\022\036\n\ncomponents\030\001 \003(\0132\n.Componentb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 404);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Components.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Components_2eproto

// ===================================================================

void SWTPoint_buf::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SWTPoint_buf::kXFieldNumber;
const int SWTPoint_buf::kYFieldNumber;
const int SWTPoint_buf::kSWTFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SWTPoint_buf::SWTPoint_buf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Components_2eproto::scc_info_SWTPoint_buf.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SWTPoint_buf)
}
SWTPoint_buf::SWTPoint_buf(const SWTPoint_buf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&swt_) -
    reinterpret_cast<char*>(&x_)) + sizeof(swt_));
  // @@protoc_insertion_point(copy_constructor:SWTPoint_buf)
}

void SWTPoint_buf::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&swt_) -
      reinterpret_cast<char*>(&x_)) + sizeof(swt_));
}

SWTPoint_buf::~SWTPoint_buf() {
  // @@protoc_insertion_point(destructor:SWTPoint_buf)
  SharedDtor();
}

void SWTPoint_buf::SharedDtor() {
}

void SWTPoint_buf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SWTPoint_buf::descriptor() {
  ::protobuf_Components_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Components_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SWTPoint_buf& SWTPoint_buf::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Components_2eproto::scc_info_SWTPoint_buf.base);
  return *internal_default_instance();
}


void SWTPoint_buf::Clear() {
// @@protoc_insertion_point(message_clear_start:SWTPoint_buf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&swt_) -
      reinterpret_cast<char*>(&x_)) + sizeof(swt_));
  _internal_metadata_.Clear();
}

bool SWTPoint_buf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SWTPoint_buf)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float SWT = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &swt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SWTPoint_buf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SWTPoint_buf)
  return false;
#undef DO_
}

void SWTPoint_buf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SWTPoint_buf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // float SWT = 3;
  if (this->swt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->swt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SWTPoint_buf)
}

::google::protobuf::uint8* SWTPoint_buf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SWTPoint_buf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // float SWT = 3;
  if (this->swt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->swt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SWTPoint_buf)
  return target;
}

size_t SWTPoint_buf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SWTPoint_buf)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  // float SWT = 3;
  if (this->swt() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SWTPoint_buf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SWTPoint_buf)
  GOOGLE_DCHECK_NE(&from, this);
  const SWTPoint_buf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SWTPoint_buf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SWTPoint_buf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SWTPoint_buf)
    MergeFrom(*source);
  }
}

void SWTPoint_buf::MergeFrom(const SWTPoint_buf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SWTPoint_buf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.swt() != 0) {
    set_swt(from.swt());
  }
}

void SWTPoint_buf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SWTPoint_buf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SWTPoint_buf::CopyFrom(const SWTPoint_buf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SWTPoint_buf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SWTPoint_buf::IsInitialized() const {
  return true;
}

void SWTPoint_buf::Swap(SWTPoint_buf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SWTPoint_buf::InternalSwap(SWTPoint_buf* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(swt_, other->swt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SWTPoint_buf::GetMetadata() const {
  protobuf_Components_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Components_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Component::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Component::kPointsFieldNumber;
const int Component::kMaxXFieldNumber;
const int Component::kMinXFieldNumber;
const int Component::kMaxYFieldNumber;
const int Component::kMinYFieldNumber;
const int Component::kWidthFieldNumber;
const int Component::kHeightFieldNumber;
const int Component::kMeanFieldNumber;
const int Component::kSDFieldNumber;
const int Component::kWVFieldNumber;
const int Component::kARFieldNumber;
const int Component::kORFieldNumber;
const int Component::kCharacteristicScaleFieldNumber;
const int Component::kOrientationFieldNumber;
const int Component::kCenterXFieldNumber;
const int Component::kCenterYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Component::Component()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Components_2eproto::scc_info_Component.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Component)
}
Component::Component(const Component& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      points_(from.points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&maxx_, &from.maxx_,
    static_cast<size_t>(reinterpret_cast<char*>(&center_y_) -
    reinterpret_cast<char*>(&maxx_)) + sizeof(center_y_));
  // @@protoc_insertion_point(copy_constructor:Component)
}

void Component::SharedCtor() {
  ::memset(&maxx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&center_y_) -
      reinterpret_cast<char*>(&maxx_)) + sizeof(center_y_));
}

Component::~Component() {
  // @@protoc_insertion_point(destructor:Component)
  SharedDtor();
}

void Component::SharedDtor() {
}

void Component::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Component::descriptor() {
  ::protobuf_Components_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Components_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Component& Component::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Components_2eproto::scc_info_Component.base);
  return *internal_default_instance();
}


void Component::Clear() {
// @@protoc_insertion_point(message_clear_start:Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  ::memset(&maxx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&center_y_) -
      reinterpret_cast<char*>(&maxx_)) + sizeof(center_y_));
  _internal_metadata_.Clear();
}

bool Component::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Component)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SWTPoint_buf points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxX = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 minX = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxY = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 minY = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &miny_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float width = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float mean = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mean_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float SD = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float WV = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &wv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float AR = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float OR = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &or__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float characteristic_scale = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &characteristic_scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float orientation = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &orientation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float center_x = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &center_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float center_y = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(133u /* 133 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &center_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Component)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Component)
  return false;
#undef DO_
}

void Component::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SWTPoint_buf points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->points(static_cast<int>(i)),
      output);
  }

  // int32 maxX = 2;
  if (this->maxx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->maxx(), output);
  }

  // int32 minX = 3;
  if (this->minx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->minx(), output);
  }

  // int32 maxY = 4;
  if (this->maxy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->maxy(), output);
  }

  // int32 minY = 5;
  if (this->miny() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->miny(), output);
  }

  // float width = 6;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->width(), output);
  }

  // float height = 7;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->height(), output);
  }

  // float mean = 8;
  if (this->mean() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->mean(), output);
  }

  // float SD = 9;
  if (this->sd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->sd(), output);
  }

  // float WV = 10;
  if (this->wv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->wv(), output);
  }

  // float AR = 11;
  if (this->ar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->ar(), output);
  }

  // float OR = 12;
  if (this->or_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->or_(), output);
  }

  // float characteristic_scale = 13;
  if (this->characteristic_scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->characteristic_scale(), output);
  }

  // float orientation = 14;
  if (this->orientation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->orientation(), output);
  }

  // float center_x = 15;
  if (this->center_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->center_x(), output);
  }

  // float center_y = 16;
  if (this->center_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->center_y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Component)
}

::google::protobuf::uint8* Component::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SWTPoint_buf points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->points(static_cast<int>(i)), deterministic, target);
  }

  // int32 maxX = 2;
  if (this->maxx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->maxx(), target);
  }

  // int32 minX = 3;
  if (this->minx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->minx(), target);
  }

  // int32 maxY = 4;
  if (this->maxy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->maxy(), target);
  }

  // int32 minY = 5;
  if (this->miny() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->miny(), target);
  }

  // float width = 6;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->width(), target);
  }

  // float height = 7;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->height(), target);
  }

  // float mean = 8;
  if (this->mean() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->mean(), target);
  }

  // float SD = 9;
  if (this->sd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->sd(), target);
  }

  // float WV = 10;
  if (this->wv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->wv(), target);
  }

  // float AR = 11;
  if (this->ar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->ar(), target);
  }

  // float OR = 12;
  if (this->or_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->or_(), target);
  }

  // float characteristic_scale = 13;
  if (this->characteristic_scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->characteristic_scale(), target);
  }

  // float orientation = 14;
  if (this->orientation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->orientation(), target);
  }

  // float center_x = 15;
  if (this->center_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->center_x(), target);
  }

  // float center_y = 16;
  if (this->center_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->center_y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Component)
  return target;
}

size_t Component::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Component)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .SWTPoint_buf points = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  // int32 maxX = 2;
  if (this->maxx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxx());
  }

  // int32 minX = 3;
  if (this->minx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minx());
  }

  // int32 maxY = 4;
  if (this->maxy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxy());
  }

  // int32 minY = 5;
  if (this->miny() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->miny());
  }

  // float width = 6;
  if (this->width() != 0) {
    total_size += 1 + 4;
  }

  // float height = 7;
  if (this->height() != 0) {
    total_size += 1 + 4;
  }

  // float mean = 8;
  if (this->mean() != 0) {
    total_size += 1 + 4;
  }

  // float SD = 9;
  if (this->sd() != 0) {
    total_size += 1 + 4;
  }

  // float WV = 10;
  if (this->wv() != 0) {
    total_size += 1 + 4;
  }

  // float AR = 11;
  if (this->ar() != 0) {
    total_size += 1 + 4;
  }

  // float OR = 12;
  if (this->or_() != 0) {
    total_size += 1 + 4;
  }

  // float characteristic_scale = 13;
  if (this->characteristic_scale() != 0) {
    total_size += 1 + 4;
  }

  // float orientation = 14;
  if (this->orientation() != 0) {
    total_size += 1 + 4;
  }

  // float center_x = 15;
  if (this->center_x() != 0) {
    total_size += 1 + 4;
  }

  // float center_y = 16;
  if (this->center_y() != 0) {
    total_size += 2 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Component::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Component)
  GOOGLE_DCHECK_NE(&from, this);
  const Component* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Component>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Component)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Component)
    MergeFrom(*source);
  }
}

void Component::MergeFrom(const Component& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Component)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
  if (from.maxx() != 0) {
    set_maxx(from.maxx());
  }
  if (from.minx() != 0) {
    set_minx(from.minx());
  }
  if (from.maxy() != 0) {
    set_maxy(from.maxy());
  }
  if (from.miny() != 0) {
    set_miny(from.miny());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.mean() != 0) {
    set_mean(from.mean());
  }
  if (from.sd() != 0) {
    set_sd(from.sd());
  }
  if (from.wv() != 0) {
    set_wv(from.wv());
  }
  if (from.ar() != 0) {
    set_ar(from.ar());
  }
  if (from.or_() != 0) {
    set_or_(from.or_());
  }
  if (from.characteristic_scale() != 0) {
    set_characteristic_scale(from.characteristic_scale());
  }
  if (from.orientation() != 0) {
    set_orientation(from.orientation());
  }
  if (from.center_x() != 0) {
    set_center_x(from.center_x());
  }
  if (from.center_y() != 0) {
    set_center_y(from.center_y());
  }
}

void Component::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Component::CopyFrom(const Component& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Component::IsInitialized() const {
  return true;
}

void Component::Swap(Component* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Component::InternalSwap(Component* other) {
  using std::swap;
  CastToBase(&points_)->InternalSwap(CastToBase(&other->points_));
  swap(maxx_, other->maxx_);
  swap(minx_, other->minx_);
  swap(maxy_, other->maxy_);
  swap(miny_, other->miny_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(mean_, other->mean_);
  swap(sd_, other->sd_);
  swap(wv_, other->wv_);
  swap(ar_, other->ar_);
  swap(or__, other->or__);
  swap(characteristic_scale_, other->characteristic_scale_);
  swap(orientation_, other->orientation_);
  swap(center_x_, other->center_x_);
  swap(center_y_, other->center_y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Component::GetMetadata() const {
  protobuf_Components_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Components_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components::kComponentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components::Components()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Components_2eproto::scc_info_Components.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Components)
}
Components::Components(const Components& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      components_(from.components_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Components)
}

void Components::SharedCtor() {
}

Components::~Components() {
  // @@protoc_insertion_point(destructor:Components)
  SharedDtor();
}

void Components::SharedDtor() {
}

void Components::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Components::descriptor() {
  ::protobuf_Components_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Components_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components& Components::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Components_2eproto::scc_info_Components.base);
  return *internal_default_instance();
}


void Components::Clear() {
// @@protoc_insertion_point(message_clear_start:Components)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  components_.Clear();
  _internal_metadata_.Clear();
}

bool Components::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Components)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Component components = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_components()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Components)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Components)
  return false;
#undef DO_
}

void Components::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Components)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Component components = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->components_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->components(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Components)
}

::google::protobuf::uint8* Components::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Components)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Component components = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->components_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->components(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Components)
  return target;
}

size_t Components::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Components)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Component components = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->components_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->components(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Components::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Components)
  GOOGLE_DCHECK_NE(&from, this);
  const Components* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Components)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Components)
    MergeFrom(*source);
  }
}

void Components::MergeFrom(const Components& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Components)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  components_.MergeFrom(from.components_);
}

void Components::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Components)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components::CopyFrom(const Components& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Components)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components::IsInitialized() const {
  return true;
}

void Components::Swap(Components* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components::InternalSwap(Components* other) {
  using std::swap;
  CastToBase(&components_)->InternalSwap(CastToBase(&other->components_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Components::GetMetadata() const {
  protobuf_Components_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Components_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SWTPoint_buf* Arena::CreateMaybeMessage< ::SWTPoint_buf >(Arena* arena) {
  return Arena::CreateInternal< ::SWTPoint_buf >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Component* Arena::CreateMaybeMessage< ::Component >(Arena* arena) {
  return Arena::CreateInternal< ::Component >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Components* Arena::CreateMaybeMessage< ::Components >(Arena* arena) {
  return Arena::CreateInternal< ::Components >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
